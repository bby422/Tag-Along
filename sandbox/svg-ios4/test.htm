<!DOCTYPE html>
<html>

  <!-- Tests embedding a single SVG block into a SCRIPT block -->

  <head>
    
    <!-- Optional meta tag; if left off, we default to only using the Flash
         renderer for Internet Explorer and using native support on other
         browsers. You can force the Flash renderer for all browsers by
         setting the META tag below to true. -->
    <!-- meta name="svg.render.forceflash" content="true" / -->
    
    <script src="svg.js" data-path="./"></script>
  </head>

  <body>
    
    <h1>svg iOS 4 test</h1>
  
    <p>
    A way to make inline SVG work on Mobile Safari of iOS 4 is to load the svg.js 
    script from the <a href="https://code.google.com/p/svgweb/">svgweb project</a>
    and then paste the svg block inside a script tag. See the source.
    </p>
    <p>
      You have to wait the dom tree get ready before you can manipulate the svg elements with javascript</p>
     
    <script type="image/svg+xml">
      <svg id="mySVG" width="250" height="150" style="border: 1px solid black;"
           xmlns:dc="http://purl.org/dc/elements/1.1/">
        <g id="myGroup">
          <rect
             id="myRect"
             width="36.416"
             height="36.416"
             x="30"
             y="30"
             fill="red"/>
          <text id="myText" 
                x="80" 
                y="80" 
                font-family="Verdana" 
                font-size="24" 
                fill="blue">hello world</text>
        </g>
      </svg>
    </script>
  <a href="#" onclick="test();">change color</a>
  <script>
  counter = 0;
  function test(){
    counter++;
    var colors = ['yellow', 'gray', 'pink', 'rgb(120,255,0)'];
    document.getElementById('myRect').setAttribute('fill', colors[counter%colors.length])
  }
  window.addEventListener('load', test, true);
  </script>
  </body></html>
